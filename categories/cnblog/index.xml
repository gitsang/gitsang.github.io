<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cnblog on Sang's Blog</title><link>https://gitsang.github.io/categories/cnblog/</link><description>Recent content in Cnblog on Sang's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 12 May 2025 10:40:51 +0800</lastBuildDate><atom:link href="https://gitsang.github.io/categories/cnblog/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynamic Partition Expansion Without LVM</title><link>https://gitsang.github.io/p/lvm/</link><pubDate>Fri, 09 May 2025 19:17:37 +0800</pubDate><guid>https://gitsang.github.io/p/lvm/</guid><description>&lt;!-- markdown-front-matter -->
&lt;blockquote>
&lt;p>非 LVM 分区实现动态扩容，适用于系统分区扩容，无需格式化磁盘，无需重新挂载磁盘&lt;/p>&lt;/blockquote>
&lt;h2 id="1-扩容步骤">&lt;a href="#1-%e6%89%a9%e5%ae%b9%e6%ad%a5%e9%aa%a4" class="header-anchor">&lt;/a>1. 扩容步骤
&lt;/h2>&lt;p>以 &lt;code>/dev/sda2&lt;/code> 扩容为例，假设 &lt;code>/dev/sda&lt;/code> 空间足够（或已通过虚拟化管理平台增加容量）&lt;/p>
&lt;p>使用 &lt;code>fdisk -l&lt;/code> 命令可看到 &lt;code>/dev/sda&lt;/code> 磁盘总容量 200GiB，&lt;code>/dev/sda2&lt;/code> 分区容量 100GiB&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Disk /dev/sda: 200 GiB, 214748364800 bytes, 419430400 sectors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disk model: QEMU HARDDISK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Units: sectors of 1 * 512 = 512 bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disklabel type: gpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disk identifier: 1459CE9A-A8E1-4934-8EC6-17C7BA97E9E0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device Start End Sectors Size Type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda1 2048 4095 2048 1M BIOS boot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda2 4096 419430366 209711087 100G Linux filesystem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现将 &lt;code>/dev/sda2&lt;/code> 分区扩容到 200GiB&lt;/p>
&lt;h3 id="11-重新分区">&lt;a href="#11-%e9%87%8d%e6%96%b0%e5%88%86%e5%8c%ba" class="header-anchor">&lt;/a>1.1 重新分区
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">fdisk /dev/sda
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>输入 &lt;code>p&lt;/code> 查看分区情况，确认 &lt;code>/dev/sda2&lt;/code> 所在的位置和大小。&lt;/li>
&lt;li>输入 &lt;code>d&lt;/code> 删除分区 &lt;code>/dev/sda2&lt;/code>。&lt;/li>
&lt;li>输入 &lt;code>n&lt;/code> 创建一个新的分区。&lt;/li>
&lt;li>选择主分区或扩展分区（根据你的需要）。&lt;/li>
&lt;li>按照提示输入分区编号（如果有多个分区）。&lt;/li>
&lt;li>按照提示输入新的起始扇区（通常是默认值）。&lt;/li>
&lt;li>按照提示输入新的结束扇区，确保分区大小为200G。&lt;/li>
&lt;li>&lt;strong>如果出现提示是否保留文件索引，选择 &lt;code>保留&lt;/code>&lt;/strong>&lt;/li>
&lt;li>输入 &lt;code>w&lt;/code> 保存更改并退出。&lt;/li>
&lt;/ul>
&lt;p>再次输入 &lt;code>fdisk -l&lt;/code> 应该能看到 &lt;code>/dev/sda2&lt;/code> 已扩容成功&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Disk /dev/sda: 200 GiB, 214748364800 bytes, 419430400 sectors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disk model: QEMU HARDDISK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Units: sectors of 1 * 512 = 512 bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Sector size (logical/physical): 512 bytes / 512 bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">I/O size (minimum/optimal): 512 bytes / 512 bytes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disklabel type: gpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Disk identifier: 1459CE9A-A8E1-4934-8EC6-17C7BA97E9E0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device Start End Sectors Size Type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda1 2048 4095 2048 1M BIOS boot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda2 4096 419430366 419426271 200G Linux filesystem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="12-扩展文件系统">&lt;a href="#12-%e6%89%a9%e5%b1%95%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f" class="header-anchor">&lt;/a>1.2 扩展文件系统
&lt;/h3>&lt;p>输入 &lt;code>df -h&lt;/code> 命令查看文件系统大小&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 6.3G 1.6M 6.3G 1% /run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda2 99G 81G 18G 81% /
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到 &lt;code>/dev/sda2&lt;/code> 文件系统空间仍未改变&lt;/p>
&lt;p>对于 &lt;code>ext4&lt;/code> 系统，可以使用 &lt;code>resize2fs /dev/sda2&lt;/code> 命令扩展文件系统&lt;/p>
&lt;p>再次输入 &lt;code>df -h&lt;/code> 命令，可以看到 &lt;code>/dev/sda2&lt;/code> 文件系统空间完成扩容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Use% Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 6.3G 1.6M 6.3G 1% /run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda2 197G 81G 108G 43% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 32G 0 32G 0% /dev/shm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 5.0M 0 5.0M 0% /run/lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tmpfs 6.3G 4.0K 6.3G 1% /run/user/1000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>RAM Permissions and Domain Management in Alibaba Cloud</title><link>https://gitsang.github.io/p/ram/</link><pubDate>Fri, 09 May 2025 19:17:31 +0800</pubDate><guid>https://gitsang.github.io/p/ram/</guid><description>&lt;!-- markdown-front-matter -->
&lt;h2 id="1-背景">&lt;a href="#1-%e8%83%8c%e6%99%af" class="header-anchor">&lt;/a>1. 背景
&lt;/h2>&lt;p>背景：&lt;/p>
&lt;ul>
&lt;li>假设只有一个二级域名 &lt;code>domain.com&lt;/code>，有多套环境的情况下，可能需要分配不同的三级子域名 &lt;code>sub.domain.com&lt;/code>，每个环境可能需要再配置四级子域名 &lt;code>sub.sub.domain.com&lt;/code>&lt;/li>
&lt;li>如果使用一个 AK 拥有所有域名的 DNS 权限，可能不太安全（即使互相信任，也无法避免误操作导致影响其他环境）&lt;/li>
&lt;/ul>
&lt;p>需求：&lt;/p>
&lt;ul>
&lt;li>每套环境需要拥有自己的一套 AK，并能自己管理自己的域名，互不冲突&lt;/li>
&lt;/ul>
&lt;h2 id="2-操作步骤">&lt;a href="#2-%e6%93%8d%e4%bd%9c%e6%ad%a5%e9%aa%a4" class="header-anchor">&lt;/a>2. 操作步骤
&lt;/h2>&lt;h3 id="21-添加子域名">&lt;a href="#21-%e6%b7%bb%e5%8a%a0%e5%ad%90%e5%9f%9f%e5%90%8d" class="header-anchor">&lt;/a>2.1 添加子域名
&lt;/h3>&lt;p>阿里云的 RAM 访问控制中，不允许使用通配等方式配置域名资源（因为操作是针对 AUTHORITY SECTION 的），因此必须先拆分出子域名。&lt;/p>
&lt;p>首先在 &lt;a class="link" href="https://dns.console.aliyun.com/" target="_blank" rel="noopener"
>域名解析&lt;/a> 页面添加子域名（本文以 &lt;code>env1.domain.com&lt;/code> 为例）&lt;/p>
&lt;p>&lt;img src="https://img2023.cnblogs.com/blog/2038910/202305/2038910-20230525094954695-265454889.png"
loading="lazy"
alt="image"
>&lt;/p>
&lt;p>添加域名需要 TXT 记录验证&lt;/p>
&lt;p>&lt;img src="https://img2023.cnblogs.com/blog/2038910/202305/2038910-20230525095051168-579963715.png"
loading="lazy"
alt="image"
>&lt;/p>
&lt;p>按照提示要求在你的主域名添加对应的 TXT 主机记录后点击验证即可添加成功。&lt;/p>
&lt;h3 id="22-创建子域名的-ram-权限策略">&lt;a href="#22-%e5%88%9b%e5%bb%ba%e5%ad%90%e5%9f%9f%e5%90%8d%e7%9a%84-ram-%e6%9d%83%e9%99%90%e7%ad%96%e7%95%a5" class="header-anchor">&lt;/a>2.2 创建子域名的 RAM 权限策略
&lt;/h3>&lt;p>其策略类似如下（需要把 &lt;code>${your-sub-domain}&lt;/code> 改为刚才创建的子域名，如本文的 &lt;code>env1.domain.com&lt;/code>），此处虽然可以使用通配，但名称必须是域名解析中列出的域名值。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Statement&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;alidns:*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Resource&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;acs:alidns:::domain/${your-sub-domain}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Effect&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Allow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Action&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;alidns:Describe*&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Resource&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;acs:alidns:::*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;Effect&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Allow&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里配置了两个策略：&lt;/p>
&lt;ul>
&lt;li>第一个策略是允许 &lt;code>acs:alidns:::domain/${your-sub-domain}&lt;/code> 资源的所有 &lt;code>alidns:*&lt;/code> 操作&lt;/li>
&lt;li>第二个策略是允许所有 &lt;code>acs:alidns:::*&lt;/code> 资源的 Describe &lt;code>alidns:Describe*&lt;/code> 操作（此处可能还需要 Describe 其他的资源，阿里云文档和客服并没有给出明确的答复）&lt;/li>
&lt;/ul>
&lt;h3 id="23-子账号赋权和-ak-申请">&lt;a href="#23-%e5%ad%90%e8%b4%a6%e5%8f%b7%e8%b5%8b%e6%9d%83%e5%92%8c-ak-%e7%94%b3%e8%af%b7" class="header-anchor">&lt;/a>2.3 子账号赋权和 AK 申请
&lt;/h3>&lt;p>新建一个 RAM 用户，需要勾选 &lt;code>OpenAPI 调用访问&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://img2023.cnblogs.com/blog/2038910/202305/2038910-20230525103254130-608849459.png"
loading="lazy"
alt="image"
>&lt;/p>
&lt;p>之后进入用户详情创建 AK&lt;/p>
&lt;p>&lt;img src="https://img2023.cnblogs.com/blog/2038910/202305/2038910-20230525103411240-349407655.png"
loading="lazy"
alt="image"
>&lt;/p>
&lt;p>进入权限管理为用户赋予刚才创建的策略，或者你也可以为用户组赋权后将用户加入用户组（推荐）&lt;/p>
&lt;p>&lt;img src="https://img2023.cnblogs.com/blog/2038910/202305/2038910-20230525104202528-918302234.png"
loading="lazy"
alt="image"
>&lt;/p>
&lt;h3 id="24-使用-ak">&lt;a href="#24-%e4%bd%bf%e7%94%a8-ak" class="header-anchor">&lt;/a>2.4 使用 AK
&lt;/h3>&lt;p>之后根据使用的不同的 ACME 或 DDNS 服务等的文档配置 AK 即可&lt;/p></description></item><item><title>Configuring Multi-NIC Routing in Windows VMs</title><link>https://gitsang.github.io/p/configuring-multi-nic-routing-in-windows-vms/</link><pubDate>Fri, 09 May 2025 19:17:19 +0800</pubDate><guid>https://gitsang.github.io/p/configuring-multi-nic-routing-in-windows-vms/</guid><description>&lt;!-- markdown-front-matter -->
&lt;h2 id="1-背景">&lt;a href="#1-%e8%83%8c%e6%99%af" class="header-anchor">&lt;/a>1. 背景
&lt;/h2>&lt;p>Windows 创建的虚拟机只能通过 NAT 上网（桥接需要过认证），但需要桥接到内网供外部访问。&lt;/p>
&lt;p>此场景使用的两张网卡会同时被设置为默认网关，出口流量有概率从桥接网卡出口导致无法访问。&lt;/p>
&lt;h2 id="2-路由表基础操作">&lt;a href="#2-%e8%b7%af%e7%94%b1%e8%a1%a8%e5%9f%ba%e7%a1%80%e6%93%8d%e4%bd%9c" class="header-anchor">&lt;/a>2. 路由表基础操作
&lt;/h2>&lt;h3 id="21-查看路由策略">&lt;a href="#21-%e6%9f%a5%e7%9c%8b%e8%b7%af%e7%94%b1%e7%ad%96%e7%95%a5" class="header-anchor">&lt;/a>2.1 查看路由策略
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip rule
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0: from all lookup local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">32766: from all lookup main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">32767: from all lookup default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="22-查看路由表">&lt;a href="#22-%e6%9f%a5%e7%9c%8b%e8%b7%af%e7%94%b1%e8%a1%a8" class="header-anchor">&lt;/a>2.2 查看路由表
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default via 172.21.208.1 dev eth0 proto dhcp metric 101
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10.60.20.0/24 dev eth1 proto kernel scope link src 10.60.20.12 metric 100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">172.21.208.0/20 dev eth0 proto kernel scope link src 172.21.219.71 metric 101
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="23-新增默认路由">&lt;a href="#23-%e6%96%b0%e5%a2%9e%e9%bb%98%e8%ae%a4%e8%b7%af%e7%94%b1" class="header-anchor">&lt;/a>2.3 新增默认路由
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route add default via 10.60.20.254 dev eth1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="24-删除默认路由">&lt;a href="#24-%e5%88%a0%e9%99%a4%e9%bb%98%e8%ae%a4%e8%b7%af%e7%94%b1" class="header-anchor">&lt;/a>2.4 删除默认路由
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route del default via 10.60.20.254 dev eth1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3-多网口出口配置">&lt;a href="#3-%e5%a4%9a%e7%bd%91%e5%8f%a3%e5%87%ba%e5%8f%a3%e9%85%8d%e7%bd%ae" class="header-anchor">&lt;/a>3. 多网口出口配置
&lt;/h2>&lt;p>一般配置多网卡时，两张网卡都会被配置为默认路由，使用 &lt;code>ip route list&lt;/code> 查看能看到类似如下配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default via 10.60.20.254 dev eth1 proto dhcp metric 100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">default via 172.21.208.1 dev eth0 proto dhcp metric 101
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10.60.20.0/24 dev eth1 proto kernel scope link src 10.60.20.12 metric 100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">172.21.208.0/20 dev eth0 proto kernel scope link src 172.21.219.71 metric 101
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于 &lt;code>default via 10.60.20.254 dev eth1 proto dhcp metric 100&lt;/code>&lt;/p>
&lt;ul>
&lt;li>default 表示默认路由&lt;/li>
&lt;li>via 10.60.20.254 表示数据包将发往 10.60.20.254 这个目标 IP 地址&lt;/li>
&lt;li>dev eth1 指定数据包将从 eth1 接口发送&lt;/li>
&lt;li>proto dhcp 表示该路由规则是通过 DHCP 协议动态分配的&lt;/li>
&lt;li>metric 100 表示优先级度量值（越小优先级越高）&lt;/li>
&lt;/ul>
&lt;p>对于 &lt;code>10.60.20.0/24 dev eth1 proto kernel scope link src 10.60.20.12 metric 100&lt;/code>&lt;/p>
&lt;ul>
&lt;li>这是一个具体的子网路由规则，用于指定数据包如何到达 10.60.20.0/24 子网。&lt;/li>
&lt;li>10.60.20.0/24 表示目标子网地址范围&lt;/li>
&lt;li>dev eth1 指定数据包将从 eth1 接口发送&lt;/li>
&lt;li>proto kernel 表示该路由规则由内核自动生成&lt;/li>
&lt;li>scope link 表示这是一个本地链接，即目标 IP 地址与本机直接相连&lt;/li>
&lt;li>src 10.60.20.12 表示源 IP 地址，即从 10.60.20.12 发送到目标子网&lt;/li>
&lt;li>metric 100 表示优先级度量值（越小优先级越高）&lt;/li>
&lt;/ul>
&lt;p>如果不希望访问外网时通过 &lt;code>10.60.20.254&lt;/code> 网关，只需将第一条路由删除即可，执行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route del default via 10.60.20.254 dev eth1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>验证除了 10.60.20.0/24 的地址，都会走 eth0 网卡&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route get 10.60.20.10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">10.60.20.10 dev eth1 src 10.60.20.12
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route get 1.1.1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1.1.1.1 via 172.21.208.1 dev eth0 src 172.21.219.71
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[root@localhost ~]# ip route get 8.8.8.8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8.8.8.8 via 172.21.208.1 dev eth0 src 172.21.219.71
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-保存设置">&lt;a href="#4-%e4%bf%9d%e5%ad%98%e8%ae%be%e7%bd%ae" class="header-anchor">&lt;/a>4. 保存设置
&lt;/h2>&lt;p>以上路由会在重启后被清理，应使用 &lt;code>ip route save&lt;/code> 保存信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">ip&lt;/span> &lt;span class="n">route&lt;/span> &lt;span class="n">save&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">opt&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rules&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 &lt;code>ip route restore&lt;/code> 恢复&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">ip&lt;/span> &lt;span class="n">route&lt;/span> &lt;span class="n">flush&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="n">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">ip&lt;/span> &lt;span class="n">route&lt;/span> &lt;span class="n">restore&lt;/span> &lt;span class="n">table&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">opt&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">route&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rules&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以将其写为 systemd 脚本，当网卡准备完成后执行&lt;/p></description></item><item><title>Efficient Large File Encryption Using Passphrase and RSA</title><link>https://gitsang.github.io/p/efficient-large-file-encryption-using-passphrase-and-rsa/</link><pubDate>Fri, 09 May 2025 19:17:07 +0800</pubDate><guid>https://gitsang.github.io/p/efficient-large-file-encryption-using-passphrase-and-rsa/</guid><description>&lt;!-- markdown-front-matter -->
&lt;h2 id="1-概述">&lt;a href="#1-%e6%a6%82%e8%bf%b0" class="header-anchor">&lt;/a>1. 概述
&lt;/h2>&lt;p>通常，非对称加密有较低的性能，如果对大文件直接使用非对称加密可能导致高负载和高耗时（过大的文件还有可能出现报错 &lt;code>RSA_padding_add_PKCS1_type_2: data too large for key size&lt;/code>）。&lt;/p>
&lt;p>因此对于大文件的加密，一般使用密码短语（&lt;code>passphrase&lt;/code>）进行加密，然后使用非对称加密来加密密码短语（&lt;code>passphrase&lt;/code>）&lt;/p>
&lt;h3 id="11-poc">&lt;a href="#11-poc" class="header-anchor">&lt;/a>1.1 POC
&lt;/h3>&lt;h4 id="111-生成随机待加密文件">&lt;a href="#111-%e7%94%9f%e6%88%90%e9%9a%8f%e6%9c%ba%e5%be%85%e5%8a%a0%e5%af%86%e6%96%87%e4%bb%b6" class="header-anchor">&lt;/a>1.1.1 生成随机待加密文件
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">dd &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>/dev/urandom &lt;span class="nv">of&lt;/span>&lt;span class="o">=&lt;/span>firmware &lt;span class="nv">bs&lt;/span>&lt;span class="o">=&lt;/span>1M &lt;span class="nv">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="112-生成-rsa-密钥对">&lt;a href="#112-%e7%94%9f%e6%88%90-rsa-%e5%af%86%e9%92%a5%e5%af%b9" class="header-anchor">&lt;/a>1.1.2 生成 RSA 密钥对
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">openssl genrsa -out private.pem &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl rsa -in private.pem -pubout -out public.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="113-打包并加密文件">&lt;a href="#113-%e6%89%93%e5%8c%85%e5%b9%b6%e5%8a%a0%e5%af%86%e6%96%87%e4%bb%b6" class="header-anchor">&lt;/a>1.1.3 打包并加密文件
&lt;/h4>&lt;p>其中：&lt;/p>
&lt;ul>
&lt;li>密码短语使用 openssl 随机生成&lt;/li>
&lt;li>文件加密使用 pbkdf2 算法，并对密码加盐处理&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">firmware&lt;/span>&lt;span class="o">=&lt;/span>./firmware
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">passphrase&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>openssl rand -base64 32&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -czPf - &lt;span class="si">${&lt;/span>&lt;span class="nv">firmware&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> openssl enc -e -pbkdf2 -a -salt -k &lt;span class="si">${&lt;/span>&lt;span class="nv">passphrase&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> dd &lt;span class="nv">of&lt;/span>&lt;span class="o">=&lt;/span>firmware.tar.gz.enc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">passphrase&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> openssl rsautl -encrypt -pubin -pubin -inkey public.pem -out passphrase.enc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="114-解密和解包">&lt;a href="#114-%e8%a7%a3%e5%af%86%e5%92%8c%e8%a7%a3%e5%8c%85" class="header-anchor">&lt;/a>1.1.4 解密和解包
&lt;/h4>&lt;p>其中：&lt;/p>
&lt;ul>
&lt;li>密码短语通过私钥解密&lt;/li>
&lt;li>文件通过与加密相同的 pbkdf2 算法解密&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">passphrase&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>openssl rsautl -decrypt -inkey private.pem -in passphrase.enc&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dd &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>firmware.tar.gz.enc &lt;span class="p">|&lt;/span> openssl enc -d -pbkdf2 -a -salt -d -k &lt;span class="si">${&lt;/span>&lt;span class="nv">passphrase&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> tar -zxPf -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Enhancing Security with Fail2ban for FRP Servers</title><link>https://gitsang.github.io/p/fail2ban-frp/</link><pubDate>Fri, 09 May 2025 19:16:59 +0800</pubDate><guid>https://gitsang.github.io/p/fail2ban-frp/</guid><description>&lt;!-- markdown-front-matter -->
&lt;h2 id="1-背景">&lt;a href="#1-%e8%83%8c%e6%99%af" class="header-anchor">&lt;/a>1. 背景
&lt;/h2>&lt;p>我们一般会使用 fail2ban 来保护暴露到公网的提供密码登录的 ssh 连接等。&lt;/p>
&lt;p>但使用 frp 穿透后所有的从外网访问都会变成 127.0.0.1 进入的，原本能用 fail2ban 保护的如 ssh 服务将无法使用。&lt;/p>
&lt;p>因此 fail2ban 应该放到 frps 服务器上。但 frps 的日志并不会对失败进行辨别，无论你访问哪个服务，frp 日志只会有连接和断开两种日志。&lt;/p>
&lt;h3 id="11-不完美的解决途径">&lt;a href="#11-%e4%b8%8d%e5%ae%8c%e7%be%8e%e7%9a%84%e8%a7%a3%e5%86%b3%e9%80%94%e5%be%84" class="header-anchor">&lt;/a>1.1 不完美的解决途径
&lt;/h3>&lt;p>正常情况下，我们不会频繁地连接和断开，只有被扫描时才容易出现。&lt;/p>
&lt;p>因此添加自定义 filter，并设置一段时间内连接超过阈值后进入监狱。&lt;/p>
&lt;p>编写文件 &lt;code>/etc/fail2ban/filter.d/frps.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[Definition]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">failregex = ^.*get a user connection \[&amp;lt;HOST&amp;gt;:[0-9]*\]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ^.*get a new work connection: \[&amp;lt;HOST&amp;gt;:[0-9]*\]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ignoreregex =
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编写文件 &lt;code>/etc/fail2ban/jail.local&lt;/code> 添加&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[frp]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">enabled = true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">findtime = 10m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">maxretry = 100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bantime = 1d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">filter = frps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">logpath = /data/frp/log/frps.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">protocol = all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chain = all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">port = all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">action = iptables-allports[name=frp,protocol=tcp]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>记得 &lt;code>fail2ban-client reload&lt;/code> 重载服务和 &lt;code>fail2ban-client status frp&lt;/code> 确认服务状态。&lt;/p>
&lt;p>如果你要添加自己的过滤规则可以使用 &lt;code>fail2ban-regex &amp;lt;LOG&amp;gt; &amp;lt;REGEX&amp;gt; [IGNOREREGEX]&lt;/code> 进行验证，比如 &lt;code>fail2ban-regex /data/frp/log/frps.log /etc/fail2ban/filter.d/frps.conf&lt;/code> （记得要用绝对路径）&lt;/p>
&lt;p>然后你可以把阈值改小一点，用多次 telnet 来验证是否能过成功封锁。 然后用 &lt;code>fail2ban-client set frp unbanip 12.36.14.241&lt;/code> 来解除封锁。&lt;/p>
&lt;h2 id="2-outlook">&lt;a href="#2-outlook" class="header-anchor">&lt;/a>2. Outlook
&lt;/h2>&lt;p>不是很完美的方案，比如如果是 http 连接，很可能超过限制，实际使用需要做一些排除的匹配。&lt;/p>
&lt;p>也许能通过 tcpdump 抓包日志来进行过滤，或编写程序输出一个更清晰的日志。&lt;/p></description></item></channel></rss>